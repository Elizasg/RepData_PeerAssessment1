median_steps_per_day <- median(steps_per_day$total_steps_per_day, na.rm = T)
mean_steps_per_day
data_per_interval <- group_by(data, interval)
data_per_interval
summarise(data_per_interval, average_number_of_steps = mean(interval))
summarise(data_per_interval, average_number_of_steps = mean(steps))
tail(summarise(data_per_interval, average_number_of_steps = mean(steps)))
summarise(data_per_interval, average_number_of_steps = mean(steps, na.rm = T))
data_per_interval <- group_by(data, interval)
data_per_interval
average_steps_by_interval <- summarise(data_per_interval, average_number_of_steps = mean(steps, na.rm = T))
average_steps_by_interval
ggplot(average_steps_by_interval)
ggplot(average_steps_by_interval, aes(x = interval, y = average_number_of_steps))
g <- ggplot(average_steps_by_interval, aes(x = interval, y = average_number_of_steps))
g + geom_line()
max(average_steps_by_interval$average_number_of_steps)
help(filter)
maximum_number_of_steps <- max(average_steps_by_interval$average_number_of_steps)
maximum_number_of_steps
filter(average_steps_by_interval, average_number_of_steps = maximum_number_of_steps)
maximum_number_of_steps
class(maximum_number_of_steps)
class(average_steps_by_interval$average_number_of_steps)
filter(average_steps_by_interval, average_number_of_steps = "maximum_number_of_steps")
filter(average_steps_by_interval, average_number_of_steps = "206.1698")
filter(average_steps_by_interval, average_number_of_steps = 206.1698)
filter(average_steps_by_interval, average_number_of_steps = maximum_number_of_steps)
filter(average_steps_by_interval, average_number_of_steps = 206.1698)
filter(average_steps_by_interval, average_number_of_steps == 206.1698)
filter(average_steps_by_interval, average_number_of_steps == "206.1698")
filter(average_steps_by_interval, average_number_of_steps == "maximum_number_of_steps")
filter(average_steps_by_interval, average_number_of_steps == 206.1698)
maximum_number_of_steps
maximum_number_of_steps <- max(average_steps_by_interval$average_number_of_steps)
maximum_number_of_steps
max(average_steps_by_interval$average_number_of_steps)
filter(average_steps_by_interval, average_number_of_steps == maximum_number_of_steps)
835/5
data
is.an(data$steps)
is.na(data$steps)
sum(is.na(data$steps))
data
average_steps_by_interval
warnings()
data$steps[is.na(data$steps)]
filter(data, steps == NA)
filter(data, steps == "NA")
data
filter(data, steps == NULL)
filter(data, steps == NA)
filter(data, is.na(data$steps))
sum(is.na(data$steps))
install.packages("devtools")
install.packages("data.table")
library("data.table", lib.loc="~/R/win-library/3.2")
library("devtools", lib.loc="~/R/win-library/3.2")
help("FillIn")
help(FillIn)
??FillIn
devtools::source_gist("4959237")
??FillIn
average_steps_by_interval <- summarise(data_per_interval, average_number_of_steps = mean(steps, na.rm = T))
average_steps_by_interval
data
FillIn(D1 = data, D2 = average_steps_by_interval,
Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval"))
Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
head(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
tail(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
data
head(data)
tail(data)
tail(average_steps_by_interval)
head(average_steps_by_interval)
tail(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
tail(average_steps_by_interval)
tail(data)
apply(data, 1, FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval"))))
apply(data, 1, FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
apply(data, 1, function(x) FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
apply(data, 1, function(x) FillIn(D1 = x, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
setwd("C:\\Users\\Eliza\\Desktop\\R courses\\Reproducible Research\\assessment 1\\RepData_PeerAssessment1")
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
library(plyr); library(dplyr)
tbl_df(data)
data <- tbl_df(data)
data_per_day <- group_by(data, date)
steps_per_day <- summarize(data_per_day, total_steps_per_day = sum(steps))
hist(steps_per_day$total_steps_per_day, col = "lightblue")
mean_steps_per_day <- mean(steps_per_day$total_steps_per_day, na.rm = T)
mean_steps_per_day
median_steps_per_day <- median(steps_per_day$total_steps_per_day, na.rm = T)
median_steps_per_day
library(ggplot2)
data_per_interval <- group_by(data, interval)
average_steps_by_interval <- summarise(data_per_interval, average_number_of_steps = mean(steps, na.rm = T))
g <- ggplot(average_steps_by_interval, aes(x = interval, y = average_number_of_steps))
g + geom_line()
maximum_number_of_steps <- max(average_steps_by_interval$average_number_of_steps)
filter(average_steps_by_interval, average_number_of_steps == maximum_number_of_steps)
sum(is.na(data$steps))
apply(data, 1, function(x) FillIn(D1 = x, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
library(data.table)
library(devtools)
data_no_na <- apply(data, 1, function(x) FillIn(D1 = x, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
devtools::source_gist("4959237")
data_no_na <- apply(data, 1, function(x) FillIn(D1 = x, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
data_no_na <- apply(data, 1, function(x) FillIn(D1 = x, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
average_steps_by_interval
average_steps_by_interval
data
data_no_na <- apply(data, 1, function(x) FillIn(D1 = x, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
tail(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
data_no_na <- apply(data, 1, function(x) FillIn(D1 = x, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
head(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval")))
head(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps", Var2 = "average_number_of_steps", KeyVar = c("interval", "interval")))
head(average_steps_by_interval)
head(data)
?FillIn
class(data)
data2 <- as.data.frame(data)
average_steps_by_interval2 <- as.data.frame(average_steps_by_interval)
head(FillIn(D1 = data2, D2 = average_steps_by_interval2, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = c("interval")))
dim(average_steps_by_interval)
average_steps_by_interval
average_steps_by_interval2
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
library(plyr); library(dplyr)
data_per_day <- group_by(data, date)
steps_per_day <- summarize(data_per_day, total_steps_per_day = sum(steps))
mean_steps_per_day <- mean(steps_per_day$total_steps_per_day, na.rm = T)
median_steps_per_day <- median(steps_per_day$total_steps_per_day, na.rm = T)
data_per_interval <- group_by(data, interval)
average_steps_by_interval <- summarise(data_per_interval, average_number_of_steps = mean(steps, na.rm = T))
average_steps_by_interval
as.data.frame(average_steps_by_interval)
data <- read.csv("activity.csv")
data_per_day <- group_by(data, date)
steps_per_day <- summarize(data_per_day, total_steps_per_day = sum(steps))
mean_steps_per_day <- mean(steps_per_day$total_steps_per_day, na.rm = T)
median_steps_per_day <- median(steps_per_day$total_steps_per_day, na.rm = T)
mean_steps_per_day
data_per_interval <- group_by(data, interval)
average_steps_by_interval <- summarise(data_per_interval, average_number_of_steps = mean(steps, na.rm = T))
as.data.frame(average_steps_by_interval)
apply(average_steps_by_interval, class)
sapply(average_steps_by_interval, class)
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
data.frame(a = sample(c(1,2), 100, rep=TRUE),
b = sample(c(3,4), 100, rep=TRUE),
fNA = sample(c(100, 200, 300, 400, NA), 100, rep=TRUE))
fillDF <- data.frame(a = c(1,2,1,2),
b = c(3,3,4,4),
fFull = c(100, 200, 300, 400))
fillDF
naDF <- data.frame(a = sample(c(1,2), 100, rep=TRUE),
b = sample(c(3,4), 100, rep=TRUE),
fNA = sample(c(100, 200, 300, 400, NA), 100, rep=TRUE))
FilledInData <- FillIn(D1 = naDF, D2 = fillDF,
Var1 = "fNA", Var2 = "fFull", KeyVar = c("a", "b"))
FilledInData
data_no_na <- apply(data, 1, function(x) FillIn(D1 = x, D2 = average_steps_by_interval,
Var1 = "steps", Var2 = "average_number_of_steps",
KeyVar = "interval"))
head(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = "interval"))
head(data)
head(average_number_of_steps)
head(average_steps_by_interval)
head(average_steps_by_interval2)
head(data2)
head(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = "interval"))
dim(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = "interval"))
dim(data)
tail(FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = "interval"))
tail(data)
head(average_steps_by_interval)
tail(average_steps_by_interval)
tail(average_steps_by_interval,n=300)
head(average_steps_by_interval,n=300)
head(average_steps_by_interval2,n=300)
FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = "interval")
average_number_of_steps
average_steps_by_interval
naDF <- data.frame(a = sample(c(1,2), 100, rep=TRUE),
b = sample(c(3,4), 100, rep=TRUE),
fNA = sample(c(100, 200, 300, 400, NA), 100, rep=TRUE))
naDF
fillDF <- data.frame(a = c(1,2,1,2),
b = c(3,3,4,4),
fFull = c(100, 200, 300, 400))
fillDF
FilledInData <- FillIn(D1 = naDF, D2 = fillDF,
Var1 = "fNA", Var2 = "fFull", KeyVar = "a")
naDF <- data.frame(b = sample(c(1,2,3,4), 100, rep=TRUE),
fNA = sample(c(100, 200, 300, 400, NA), 100, rep=TRUE))
naDF
fillDF <- data.frame(b = c(1,2,3,4),
fFull = c(100, 200, 300, 400))
fillDF
FilledInData <- FillIn(D1 = naDF, D2 = fillDF,
Var1 = "fNA", Var2 = "fFull", KeyVar = "b")
FilledInData
setwd("C:\\Users\\Eliza\\Desktop\\R courses\\Reproducible Research\\assessment 1\\RepData_PeerAssessment1")
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
library(plyr); library(dplyr)
data <- tbl_df(data)
# What is mean total number of steps taken per day?
# For this part of the assignment, you can ignore the missing values in the dataset.
# 1.	Calculate the total number of steps taken per day
data_per_day <- group_by(data, date)
steps_per_day <- summarize(data_per_day, total_steps_per_day = sum(steps))
# 2.	If you do not understand the difference between a histogram and a barplot, research the difference between them. Make a histogram of the total number of steps taken each day
hist(steps_per_day$total_steps_per_day, col = "lightblue")
# 3.	Calculate and report the mean and median of the total number of steps taken per day
mean_steps_per_day <- mean(steps_per_day$total_steps_per_day, na.rm = T)
median_steps_per_day <- median(steps_per_day$total_steps_per_day, na.rm = T)
# What is the average daily activity pattern?
# 1.	Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the
# average number of steps taken, averaged across all days (y-axis)
library(ggplot2)
data_per_interval <- group_by(data, interval)
average_steps_by_interval <- summarise(data_per_interval, average_number_of_steps = mean(steps, na.rm = T))
g <- ggplot(average_steps_by_interval, aes(x = interval, y = average_number_of_steps))
g + geom_line()
maximum_number_of_steps <- max(average_steps_by_interval$average_number_of_steps)
filter(average_steps_by_interval, average_number_of_steps == maximum_number_of_steps)
sum(is.na(data$steps))
average_steps_by_interval
head(match(data$interval, average_steps_by_interval$interval))
FillIn(D1 = data, D2 = average_steps_by_interval,
Var1 = "steps", Var2 = "average_number_of_steps",
KeyVar = "interval"))
FillIn(D1 = data, D2 = average_steps_by_interval,
Var1 = "steps", Var2 = "average_number_of_steps",
KeyVar = "interval")
library(devtools); library(data.table)
devtools::source_gist("4959237")
FillIn(D1 = data, D2 = average_steps_by_interval,
Var1 = "steps", Var2 = "average_number_of_steps",
KeyVar = "interval")
??(merge)
?(merge)
merge(data, average_steps_by_interval, by = "interval")
head(merge(data, average_steps_by_interval, by = "interval"))
tail(merge(data, average_steps_by_interval, by = "interval"))
head(merge(data, average_steps_by_interval, by = "interval"), 100)
FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = "interval")
filter(data, steps= 320)
filter(data, interval= 320)
tail(data)
filter(data, interval = 420)
filter(data, "interval" = 420)
filter(data, interval = 420)
filter(data, interval == 420)
?arrange
data_no_na <- FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = "interval")
head(data_no_na)
head(arrange(data_no_na, interval, date))
head(arrange(data_no_na, date, interval))
head(average_steps_by_interval)
summarise(group_by(data_no_na, date), total_steps_per_day = sum(steps))
hist(summarise(group_by(data_no_na, date), total_steps_per_day = sum(steps)[total_steps_per_day])
)
hist(summarise(group_by(data_no_na, date), total_steps_per_day = sum(steps)["total_steps_per_day"])
)
steps_per_day_no_na <- summarise(group_by(data_no_na, date), total_steps_per_day = sum(steps))
steps_per_day_no_na
mean_steps_per_day
steps_per_day
data_no_na
steps_per_day_no_na
hist(steps_per_day_no_na$total_steps_per_day)
hist(steps_per_day_no_na$total_steps_per_day, col = "lightblue")
hist(steps_per_day$total_steps_per_day, col = "lightblue")
mean_steps_per_day_no_na <- mean(steps_per_day_no_na$total_steps_per_day)
mean_steps_per_day_no_na
median_steps_per_day_no_na <- median(steps_per_day_no_na$total_steps_per_day, na.rm = T)
median_steps_per_day_no_na
options(digits=4)
warnings()
steps_per_day_no_na
options(round=4)
steps_per_day_no_na
options(op)
format(steps_per_day_no_na, nsmall = 4)
mean_steps_per_day_no_na
median_steps_per_day_no_na
setwd("C:\\Users\\Eliza\\Desktop\\R courses\\Reproducible Research\\assessment 1\\RepData_PeerAssessment1")
setwd("C:\\Users\\Eliza\\Desktop\\R courses\\Reproducible Research\\assessment 1\\RepData_PeerAssessment1")
# Loading and preprocessing the data
# Show any code that is needed to
# 1.	Load the data (i.e. read.csv())
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
# 2.	Process/transform the data (if necessary) into a format suitable for your analysis
library(plyr); library(dplyr)
data <- tbl_df(data)
# What is mean total number of steps taken per day?
# For this part of the assignment, you can ignore the missing values in the dataset.
# 1.	Calculate the total number of steps taken per day
data_per_day <- group_by(data, date)
steps_per_day <- summarize(data_per_day, total_steps_per_day = sum(steps))
# 2.	If you do not understand the difference between a histogram and a barplot, research the difference between them. Make a histogram of the total number of steps taken each day
hist(steps_per_day$total_steps_per_day, col = "lightblue")
# 3.	Calculate and report the mean and median of the total number of steps taken per day
mean_steps_per_day <- mean(steps_per_day$total_steps_per_day, na.rm = T)
median_steps_per_day <- median(steps_per_day$total_steps_per_day, na.rm = T)
# What is the average daily activity pattern?
# 1.	Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the
# average number of steps taken, averaged across all days (y-axis)
library(ggplot2)
data_per_interval <- group_by(data, interval)
average_steps_by_interval <- summarise(data_per_interval, average_number_of_steps = mean(steps, na.rm = T))
g <- ggplot(average_steps_by_interval, aes(x = interval, y = average_number_of_steps))
g + geom_line()
# 2.	Which 5-minute interval, on average across all the days in the dataset, contains the
#maximum number of steps?
maximum_number_of_steps <- max(average_steps_by_interval$average_number_of_steps)
filter(average_steps_by_interval, average_number_of_steps == maximum_number_of_steps)
# Imputing missing values
# Note that there are a number of days/intervals where there are missing values (coded as NA).
# The presence of missing days may introduce bias into some calculations or summaries of the data.
# 1.	Calculate and report the total number of missing values in the dataset (i.e. the total
#number of rows with NAs)
sum(is.na(data$steps))
# 2.	Devise a strategy for filling in all of the missing values in the dataset. The strategy
#does not need to be sophisticated. For example, you could use the mean/median for that day, or
#the mean for that 5-minute interval, etc.
library(devtools); library(data.table)
devtools::source_gist("4959237")
data_no_na <- FillIn(D1 = data, D2 = average_steps_by_interval, Var1 = "steps",
Var2 = "average_number_of_steps", KeyVar = "interval")
# 3.	Create a new dataset that is equal to the original dataset but with the missing data filled in.
data_no_na <- arrange(data_no_na, date, interval)
# 4.	Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?
steps_per_day_no_na <- summarise(group_by(data_no_na, date), total_steps_per_day = sum(steps))
hist(steps_per_day_no_na$total_steps_per_day, col = "lightblue")
mean_steps_per_day_no_na <- mean(steps_per_day_no_na$total_steps_per_day)
median_steps_per_day_no_na <- median(steps_per_day_no_na$total_steps_per_day, na.rm = T)
format(steps_per_day_no_na, nsmall = 4)
median_steps_per_day_no_na
format(mean_steps_per_day_no_na, nsmall = 4)
mean_steps_per_day_no_na
format(median_steps_per_day_no_na, nsmall = 4)
steps_per_day_no_na
head(weekdays(data_no_na$date))
Sys.setlocale("LC_TIME", "English")
head(weekdays(data_no_na$date))
head(weekdays(data_no_na$date), 100)
head(weekdays(data_no_na$date), 100)
weekdaysvec <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
data_no_na$day <- factor((weekdays(data_no_na$date) %in% weekdaysvec),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
)
head(data_no_na$day, 100)
head(data_no_na, 100)
tail(data_no_na, 100)
View(data_no_na)
data_no_na_per_interval <- group_by(data_no_na, interval)
data_no_na_per_interval <- group_by(data_no_na, day, interval)
warnings()
data_no_na_per_interval
average_steps_by_interval_no_na <- summarise(data_no_na_per_interval, average_number_of_steps = mean(steps))
average_steps_by_interval_no_na
View(average_steps_by_interval_no_na)
library("ggplot2", lib.loc="~/R/win-library/3.2")
qplot(interval, average_number_of_steps, data = average_steps_by_interval_no_na, facets = day ~ ., binwidth = 2)
qplot(interval, average_number_of_steps, data = average_steps_by_interval_no_na, facets = day ~ ., binwidth = 2, geom="line")
qplot(interval, average_number_of_steps, data = average_steps_by_interval_no_na, facets = day ~ ., binwidth = 2, geom="l")
qplot(interval, average_number_of_steps, data = average_steps_by_interval_no_na, facets = day ~ ., binwidth = 2, geom="line")
qplot(interval, average_number_of_steps, data = average_steps_by_interval_no_na,
facets = day ~ ., binwidth = 2, geom="line"
ylab="number of steps")
qplot(interval, average_number_of_steps, data = average_steps_by_interval_no_na,
facets = day ~ ., binwidth = 2, geom="line",
ylab="number of steps")
hist(steps_per_day_no_na$total_steps_per_day, col = 468)
hist(steps_per_day_no_na$total_steps_per_day, col = 367)
colors()
hist(steps_per_day_no_na$total_steps_per_day, col = "lavender")
hist(steps_per_day_no_na$total_steps_per_day, col = "cyan1")
hist(steps_per_day_no_na$total_steps_per_day, col = "thistle")
hist(steps_per_day_no_na$total_steps_per_day, col = "thistle4")
hist(steps_per_day_no_na$total_steps_per_day, col = "thistle2")
hist(steps_per_day_no_na$total_steps_per_day, col = "thistle3")
hist(steps_per_day_no_na$total_steps_per_day, col = "seashell1")
hist(steps_per_day_no_na$total_steps_per_day, col = "salmon2")
hist(steps_per_day_no_na$total_steps_per_day, col = "peachpuff4")
hist(steps_per_day_no_na$total_steps_per_day, col = "sienna2")
hist(steps_per_day_no_na$total_steps_per_day, col = "linen")
hist(steps_per_day_no_na$total_steps_per_day, col = "rosybrown")
hist(steps_per_day_no_na$total_steps_per_day, col = "olivedrab3")
hist(steps_per_day_no_na$total_steps_per_day, col = "mintcream")
hist(steps_per_day_no_na$total_steps_per_day, col = "aquamarine")
hist(steps_per_day_no_na$total_steps_per_day, col = "turquoise")
hist(steps_per_day_no_na$total_steps_per_day, col = "violetred4")
hist(steps_per_day_no_na$total_steps_per_day, col = "royalblue3")
hist(steps_per_day_no_na$total_steps_per_day, col = "royalblue1")
hist(steps_per_day_no_na$total_steps_per_day, col = "royalblue4")
hist(steps_per_day_no_na$total_steps_per_day, col = "royalblue")
hist(steps_per_day_no_na$total_steps_per_day, col = "snow3")
hist(steps_per_day_no_na$total_steps_per_day, col = "snow4")
hist(steps_per_day_no_na$total_steps_per_day, col = "snow2")
hist(steps_per_day_no_na$total_steps_per_day, col = "snow3")
hist(steps_per_day$total_steps_per_day, col = "snow3")
ggplot(aes(x=total_steps_per_day)) +
geom_histogram(data=steps_per_day_no_na$total_steps_per_day,fill = "red", alpha = 0.2) +
geom_histogram(data=steps_per_day$total_steps_per_day),fill = "blue", alpha = 0.2)
ggplot(aes(x=total_steps_per_day)) +
geom_histogram(data=steps_per_day_no_na$total_steps_per_day,fill = "red", alpha = 0.2) +
geom_histogram(data=steps_per_day$total_steps_per_day,fill = "blue", alpha = 0.2)
ggplot() +
geom_histogram(data=steps_per_day_no_na$total_steps_per_day,fill = "red", alpha = 0.2) +
geom_histogram(data=steps_per_day$total_steps_per_day,fill = "blue", alpha = 0.2)
ggplot() +
geom_histogram(steps_per_day_no_na$total_steps_per_day,fill = "red", alpha = 0.2) +
geom_histogram(steps_per_day$total_steps_per_day,fill = "blue", alpha = 0.2)
ggplot() +
geom_histogram(steps_per_day_no_na$total_steps_per_day,fill = "red", alpha = 0.2)
ggplot() +
geom_histogram(data=steps_per_day_no_na$total_steps_per_day,fill = "red", alpha = 0.2)
ggplot(aes(x=total_steps_per_day)) +
geom_histogram(data=steps_per_day_no_na$total_steps_per_day,fill = "red", alpha = 0.2)
dim(steps_per_day_no_na)
dim(steps_per_day)
steps_per_day_no_na
ggplot(total_steps_per_day, data=steps_per_day_no_na, aes(x=total_steps_per_day), geom="histogram") +
)
ggplot(total_steps_per_day, data=steps_per_day_no_na, aes(x=total_steps_per_day), geom="histogram")
ggplot(steps_per_day_no_na$total_steps_per_day, data=steps_per_day_no_na, aes(x=total_steps_per_day), geom="histogram")
qplot(steps_per_day_no_na$total_steps_per_day, data=steps_per_day_no_na, aes(x=total_steps_per_day), geom="histogram")
qplot(steps_per_day_no_na$total_steps_per_day, data=steps_per_day_no_na, aes(x=total_steps_per_day), geom="histogram")
qplot(steps_per_day_no_na$total_steps_per_day, data=steps_per_day_no_na, geom="histogram")
qplot(steps_per_day_no_na$total_steps_per_day, data=steps_per_day_no_na,, geom="histogram", binwidth=0.01)
hist(steps_per_day_no_na$total_steps_per_day, col = "snow3")
hist(steps_per_day$total_steps_per_day, col = "snow4")
hist(steps_per_day$total_steps_per_day, col = "snow4", add=T)
p1 <- hist(steps_per_day_no_na$total_steps_per_day, col = "snow3")
p2 <- hist(steps_per_day$total_steps_per_day, col = "snow4")
plot(p1)
plot( p2, add=T)
?plot
plot(p1, col="peru")
plot(p2, col="plum1", add=T)
plot(p2, col="plum1")
plot(p1, col="peru", add=T)
plot(p2, col="plum1")
plot(p1, col="peru", add=T)
plot(p1, col="peru", add=T)
plot(p2, col="plum1")
plot(p1, col="peru")
plot(p2, col="plum1", add=T)
plot(p1, col="peru")
plot(p2, col="plum1", add=T)
plot(p2, col="plum1", add=T, main = "adjustcolor() -> translucent")
plot(p2, col="plum1", add=T, col=rgb(0, 1, 0, 0.5))
plot(p1, col="red")
plot(p2, col="plum1", add=T, col=rgb(0, 1, 0, 0.5))
plot(p1, col="red")
plot(p2, col="plum1", add=T, col=rgb(0, 1, 0.5))
plot(p1, col="red")
plot(p2, add=T, col=rgb(0, 1, 0, 0.5))
plot(p2, add=T, col=rgb(0, 2, 0, 0.5))
plot(p1, col="red")
plot(p2, add=T, col=rgb(0, 2, 0, 0.5))
plot(p1, col='skyblue',border=T)
plot(p2, add=T,col=scales::alpha('red',.5),border=T))
plot(p2, add=T,col=scales::alpha('red',.5),border=T)
plot(p2, col='skyblue',border=T)
plot(p1, add=T,col=scales::alpha('red',.5),border=T)
plot(p1, col='skyblue',border=T)
plot(p2,xlim=c(0,35), add=T,col=scales::alpha('red',.5),border=T)
plot(p2, col='skyblue',border=T)
plot(p1, add=T,xlim=c(0,35), col=scales::alpha('red',.5),border=T)
plot(p1, col='skyblue',border=T)
plot(p2,ylim=c(0,35), add=T,col=scales::alpha('red',.5),border=T)
plot(p2, col='skyblue',border=T)
plot(p1, add=T,ylim=c(0,35), col=scales::alpha('red',.5),border=T)
plot(p2, col='skyblue',border=T)
plot(p1, add=T,ylim=c(0,35), col=scales::alpha('red',.5),border=T)
plot(p1, col='skyblue',border=T)
plot(p2,ylim=c(0,35), add=T,col=scales::alpha('red',.5),border=T)
plot(p1, col='skyblue',border=T)
plot(p2, add=T,ylim=c(0,35), col=scales::alpha('red',.5),border=T)
plot(p1, col='skyblue',border=T, col=scales::alpha('red',.5))
plot(p2, add=T,ylim=c(0,35), col=scales::alpha('red',.5),border=T)
plot(p1,border=T, col=scales::alpha('blue',.5))
plot(p2, add=T,ylim=c(0,35), col=scales::alpha('red',.5),border=T)
plot(p2, add=T,ylim=c(0,35), col=scales::alpha('red',.5),border=T)
hist(steps_per_day_no_na$total_steps_per_day, col = "snow3")
qplot(interval, average_number_of_steps, data = average_steps_by_interval_no_na,
facets = day ~ ., binwidth = 2, geom="line",
ylab="number of steps")
steps_per_day
steps_per_day <- summarize(data_per_day, total_steps_per_day = sum(steps, na.rm=T))
steps_per_day
steps_per_day
steps_per_day <- summarize(data_per_day, total_steps_per_day = sum(steps))
steps_per_day
hist(steps_per_day$total_steps_per_day, col = "lightpink")
hist(steps_per_day$total_steps_per_day, col = "lightlilac")
hist(steps_per_day$total_steps_per_day, col = "lightpurple")
hist(steps_per_day$total_steps_per_day, col = "lightgreen")
